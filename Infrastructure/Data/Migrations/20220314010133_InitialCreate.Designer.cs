// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220314010133_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Core.Entities.ItemHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("HistoryId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("itemHistorys");
                });

            modelBuilder.Entity("Core.Entities.KitOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatetimeOfOrderApproval")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatetimeOfOrderCreation")
                        .HasColumnType("TEXT");

                    b.Property<string>("FarmerEmail")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OrderPoints")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KitOrders");
                });

            modelBuilder.Entity("Core.Entities.KitOrderHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("CooperativeUserEmail")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatetimeOfHistory")
                        .HasColumnType("TEXT");

                    b.Property<string>("FarmerEmail")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KitOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderPoints")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KitOrderId");

                    b.ToTable("KitOrderHistories");
                });

            modelBuilder.Entity("Core.Entities.KitOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Acres")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Approved")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KitOrderHistoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderItemPoints")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TypeValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KitOrderHistoryId");

                    b.ToTable("KitOrderItems");
                });

            modelBuilder.Entity("Core.Entities.ItemHistory", b =>
                {
                    b.HasOne("Core.Entities.KitOrderHistory", "History")
                        .WithMany()
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.KitOrderItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Core.Entities.KitOrderHistory", b =>
                {
                    b.HasOne("Core.Entities.KitOrder", null)
                        .WithMany("OrderHistories")
                        .HasForeignKey("KitOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Entities.KitOrderItem", b =>
                {
                    b.HasOne("Core.Entities.KitOrderHistory", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("KitOrderHistoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Entities.KitOrder", b =>
                {
                    b.Navigation("OrderHistories");
                });

            modelBuilder.Entity("Core.Entities.KitOrderHistory", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
